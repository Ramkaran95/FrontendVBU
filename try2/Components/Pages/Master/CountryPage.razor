@page "/country"
@inject HttpClient Http




<div class="container py-5" style="border: 1px solid ; border-radius: 10px 100px 10px 10px;">
    <div class="row ">

        <h4 class="text-primary fw-bold mb-4">Country Name Master</h4>
        <div class="col-md-3">
            <div class="d-grid gap-2">
                <Navlink class="btn mt-2 btn-primary" @onclick="optionAdd">Add</Navlink>
                <Navlink class="btn  mt-2 btn-secondary" @onclick="optionEdit">Edit</Navlink>
                <Navlink class="btn  mt-2 btn-danger" @onclick="optionDelete">Delete</Navlink>
                <Navlink class="btn  mt-2 btn-info text-white" @onclick="optionList">List</Navlink>
                <Navlink class="btn  mt-2 btn-warning text-dark" @onclick="optionPrint">Print</Navlink>

            </div>
        </div>
        @code {
            string option = "add";
            public void optionAdd() { option = "add"; }
            public void optionEdit() { option = "edit"; }
            public void optionDelete() { option = "delete"; }
            public void optionList() { option = "list";


            }
            public void optionPrint() { option = "print"; }



        }
        <div class="col-md-9" >
            <div class="card shadow-sm">
                <div class="card-body ">

                    <div class="mb-3 container  ">
                        @if (option == "add")
                        {
                            @if (adderrormsg == null)
                            {

                            }
                            else
                            {

                                <p1>@adderrormsg</p1>

                            }
                            <p asp-for="CountryName" class="form-label fw-bold">Country Name</p>
                            <input asp-for="CountryName" class="form-control" required @bind="countryname" placeholder="Enter country name" />


                            <!-- Optional Submit Button -->
                            <button class="btn btn-primary mt-2" @onclick="AddCountry">Add</button>
                        }
                        else if (option == "edit")
                        {

                            @if (editerrormsg == null)
                            {

                            }
                            else
                            {

                                <p1>@editerrormsg</p1>

                            }

                            <input asp-for="CountryName" class="form-control" required @bind="countryname" placeholder="Enter country name" />

                            <input asp-for="NewCountryName" class="form-control  mt-2" placeholder="rename country" required @bind="newname"> </input>
                            <button class="btn btn-secondary mt-2" @onclick="EditCountry">Edit</button>

                        }
                        else if (option == "delete")
                        {
                            @if (errormsg == null)
                            {

                            }
                            else
                            {

                                <p1>@errormsg</p1>

                            }
                            <input asp-for="CountryName" class="form-control" required @bind="countryname" placeholder="Enter country name" />



                            <button class="btn btn-danger mt-2" @onclick="DeleteCategory">Delete</button>

                        }
                        else if (option == "list")
                        {
                           

                            <button class="btn " @onclick="GetCategory" title="Refresh">
                                <i class="bi bi-arrow-clockwise"></i>
                            </button>
                            
                           
                            @if (categories == null)
                            {
                                <p></p>
                            }
                            else if (categories.Count == 0)
                            {
                                <p>No categories found.</p>
                            }
                            else
                            {
                                @* <select @bind="selectedCategory"> *@
                                @*     <option value="">-- Select Category --</option> *@
                                @*     @foreach (var cat in categories) *@
                                @*     { *@
                                @*         <option value="@cat.Trim()">@cat.Trim()</option> *@
                                @*     } *@
                                @* </select> *@

                                @* <br /> *@
                                @* <br /> *@
                                <div style="max-height: 300px; overflow-y: auto;">
                                    <table class="table">
                                        <thead>
                                            <tr>
                                                <th> Name</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var cat in categories)
                                            {
                                                <tr>
                                                    <td class="fs-6">@cat.Trim()</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>

                               
                               
                               
     

                            }
                   
                        }
                        else
                        {
                            <h1>print</h1>    

                        }
                      
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>












@code {
    List<string> categories;
    string selectedCategory;

    public async Task GetCategory()
    {
        
       

        try
        {
            categories = await Http.GetFromJsonAsync<List<string>>("https://localhost:7183/api/Country/List");


        }
        catch (Exception)
        {
            categories = new List<string> { "Error fetching categories." };
        }
    }

}

@code {

    string errormsg;
    string countryname;

    public async Task DeleteCategory()
    {
      
        try
        {

            var response=await Http.DeleteAsync("https://localhost:7183/api/Country/DeleteCountry?countryname="+ countryname );
            errormsg  = await response.Content.ReadAsStringAsync();


        }
        catch (Exception e)
        {
            errormsg= e.StackTrace.ToString();
        }
    }

}



@code{
	string adderrormsg;
    public async Task AddCountry()
    {
      
        var details = new {
            contry = countryname,
            user = "",
            createdAt = DateTime.UtcNow,
            cuser = "",
            updatedAt = DateTime.UtcNow
        };

        try
        {
            var response = await Http.PostAsJsonAsync("https://localhost:7183/api/Country/AddCountry", details);
            if (response.IsSuccessStatusCode)
            {
                adderrormsg = await response.Content.ReadAsStringAsync(); 
            }
            else
            {
                adderrormsg =  await response.Content.ReadAsStringAsync();
            }
        }
        catch (Exception ex)
        {
            adderrormsg = ex.Message;
        }
    }

}

@code {
    string  newname;
	string editerrormsg;
    public async Task EditCountry()
    {

       

        try
        {
            var response = await Http.PutAsync($"https://localhost:7183/api/Country/EditCountry?countryname={countryname}&counewname={newname}",null);
            if (response.IsSuccessStatusCode)
            {
                editerrormsg = await response.Content.ReadAsStringAsync();
               
            }
            else
            {
                editerrormsg = await response.Content.ReadAsStringAsync();
            }
        }
        catch (Exception ex)
        {
            editerrormsg = ex.Message;
        }
    }

}

